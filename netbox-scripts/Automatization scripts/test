- name: Deliver Nautobot scripts
  hosts: s-msk-p-scripter-x5
  become: True
  vars:
    ansible_password:                 "{{ ansible_password }}"
    ansible_become_pass:              "{{ ansible_password }}"
    ansible_user:                     "srv-gtsprm-g"
    local_source_dir:                 "nautobot_network_scanner/"
    remote_target_dir:                "/usr/local/nautobot-ci"
  tasks:
    - name: Transfer Scripts
      block:
        - name: Archive the Scripts directory
          archive:
            path: "{{ local_source_dir }}/"
            dest: "{{ remote_target_dir }}.tar.gz"
            format: gz
          delegate_to: localhost
          become: false
        - name: Copy scripts folder
          block:
            - name: Remove old libs folder
              file:
                path: "{{ remote_target_dir }}"
                state: absent
            - name: Ensure the destination directory exists
              file:
                path: "{{ remote_target_dir }}"
                state: directory
                mode: '0755'
              become: yes
            - name: Unpack the archive on the remote machine
              unarchive:
                src: "{{ remote_target_dir }}.tar.gz"
                dest: "{{ remote_target_dir }}"
            - name: Change Group of Scripts Folder Recursively
              file:
                path: "{{ remote_target_dir }}"
                group: "root"
                recurse: yes
            - name: Create .env file
              copy:
                content: |
                  HPNA_LOGIN='{{ HPNA_LOGIN }}'
                  HPNA_PASSWORD='{{ HPNA_PASSWORD }}'
                  NAUTOBOT_URL='{{ NAUTOBOT_URL }}'
                  NAUTOBOT_TOKEN='{{ NAUTOBOT_TOKEN }}'
                  HPNA_WEB_LOGIN='{{ HPNA_WEB_LOGIN }}'
                  HPNA_WEB_PASSWORD='{{ HPNA_WEB_PASSWORD }}'
                dest: "{{ remote_target_dir }}/.env"
                mode: '0755'
        - name: Ensure multiple cron jobs are present
          cron:
            name: "{{ item.name }}"
            user: "{{ item.user }}"
            minute: "{{ item.minute }}"
            hour: "{{ item.hour }}"
            job: "{{ item.job }}"
            state: present
          with_items:
            - { name: "Update Device Nautobot", user: "root", minute: "0", hour: "0", job: "python3 /usr/local/nautobot-ci/get_device.py > /var/log/script_logs/nautobot_get_device.log 2>&1" }
            - { name: "Update VRF Nautobot", user: "root", minute: "30", hour: "0", job: "python3 /usr/local/nautobot-ci/get_vrf.py > /var/log/script_logs/nautobot_get_vrf.log 2>&1" }
            - { name: "Update VLAN Nautobot", user: "root", minute: "15", hour: "*/1", job: "python3 /usr/local/nautobot-ci/get_vlan.py > /var/log/script_logs/nautobot_get_vlan.log 2>&1" }
            - { name: "Update VNI Nautobot", user: "root", minute: "30", hour: "1", job: "python3 /usr/local/nautobot-ci/get_vni_fabric.py > /var/log/script_logs/nautobot_get_vni_fabric.log 2>&1" }
            - { name: "Update Inventory Nautobot", user: "root", minute: "0", hour: "2", job: "python3 /usr/local/nautobot-ci/get_inventory.py > /var/log/script_logs/nautobot_get_inventory.log 2>&1" }
            - { name: "Update Prefix Nautobot", user: "root", minute: "30", hour: "2", job: "python3 /usr/local/nautobot-ci/get_prefix.py > /var/log/script_logs/nautobot_get_prefix.log 2>&1" }
            - { name: "Update ARP Nautobot", user: "root", minute: "45", hour: "*/2", job: "python3 /usr/local/nautobot-ci/get_arp.py > /var/log/script_logs/nautobot_get_arp.log 2>&1" }
            - { name: "Update Interface on Nautobot", user: "root", minute: "30", hour: "3", job: "python3 /usr/local/nautobot-ci/get_interface.py > /var/log/script_logs/nautobot_get_interface.log 2>&1" }
            - { name: "Update Vlans on interfaces Nautobot", user: "root", minute: "0", hour: "4", job: "python3 /usr/local/nautobot-ci/get_vlans_on_interface.py > /var/log/script_logs/nautobot_get_vlans_on_interface.log 2>&1" }
